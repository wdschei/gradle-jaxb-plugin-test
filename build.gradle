group 'com.thescheideggers'
version '0.1-SNAPSHOT'

buildscript {
    //********************************************************************************
    // uncomment for local testing
    //--------------------------------------------------------------------------------
    //repositories {
    //    flatDir { dirs '../gradle-jaxb-plugin/build/libs' }       // gradle unversionedJar
    //    //flatDir { dirs "/${gradle.gradleHomeDir}/lib/plugins" } // gradle installPlugin
    //    mavenCentral()
    //    jcenter()
    //}
    //
    //dependencies {
    //    classpath ':gradle-jaxb-plugin'
    //    classpath 'com.google.inject:guice:3.0'
    //    classpath 'com.google.inject.extensions:guice-assistedinject:3.0'
    //}
    //********************************************************************************

    //********************************************************************************
    // use artifacts from bintray
    //--------------------------------------------------------------------------------
    repositories {
      jcenter()
      mavenCentral()
    }

    dependencies {
      // https://github.com/jacobono/gradle-jaxb-plugin
      classpath 'com.github.jacobono:gradle-jaxb-plugin:1.3.6'
      // https://github.com/rackerlabs/gradle-jaxb-plugin
      //classpath 'org.openrepose:gradle-jaxb-plugin:2.0'
    }
    //********************************************************************************
}

allprojects {
    repositories {
        mavenCentral()
    }
}

subprojects { project ->

    boolean doJAXB = Boolean.valueOf(project.getProperties().getOrDefault('doJAXB', 'false'))
    String jaxbDir = ""
    if (doJAXB) {
        // https://github.com/jacobono/gradle-jaxb-plugin
        apply plugin: 'com.github.jacobono.jaxb'
        //// https://github.com/rackerlabs/gradle-jaxb-plugin
        //apply plugin: 'org.openrepose.gradle.plugins.jaxb'

        dependencies {
            // TODO: jaxws 2.2.6 uses jaxb 2.2.5, but can't dL 2.2.5 from maven the pom is off
            jaxb 'com.sun.xml.bind:jaxb-xjc:2.2.7-b41'
            jaxb 'com.sun.xml.bind:jaxb-impl:2.2.7-b41'
            jaxb 'javax.xml.bind:jaxb-api:2.2.7'
            jaxb 'org.jvnet.jaxb2_commons:jaxb2-basics-ant:0.6.5'
            //jaxb 'org.jvnet.jaxb2_commons:jaxb2-basics-annotate:0.6.5'
        }

        File generatedDir = new File('build/generated-sources/xjc')
        //if (generatedDir.mkdirs()) {
        //    println "Created: $generatedDir"
        //} else {
        //    println "Exists: $generatedDir"
        //}

        // gradle-jaxb-plugin configuration
        jaxb {
            xsdDir = "${project.name}/src/main/resources/META-INF/schema"
            bindingsDir = "${project.name}/src/main/resources/META-INF/schema"
            bindings = ['bindings.xjb']
            xjc {
                //taskClassname = 'org.jvnet.jaxb2_commons.xjc.XJC2Task'
                //args = ['-Xannotate']
                destinationDir = "$generatedDir"
            }
        }

        jaxbDir = "$generatedDir"
    }

    if (doJAXB || Boolean.valueOf(project.getProperties().getOrDefault('doScala', 'false'))) {
        apply plugin: 'scala'

        dependencies {
            // 54.4. Dependency management
            compile 'org.scala-lang:scala-library:2.11.1'
            compile 'com.typesafe.scala-logging:scala-logging-slf4j_2.11:2.1.2'
            // 7.2. Declaring your dependencies
            testCompile group: 'junit', name: 'junit', version: '4.11'
        }

        if (doJAXB) {
            sourceSets {
                main {
                    scala {
                        srcDirs += jaxbDir
                    }
                }
            }
        }

        sourceSets {
            main {
                scala {
                    srcDirs += 'src/main/scala'
                }
            }
            test {
                scala {
                    srcDirs += 'src/test/scala'
                }
            }
        }
    }
}

tasks.withType(ScalaCompile) {
    // 54.9. Compiling in external process
    configure(scalaCompileOptions.forkOptions) {
        memoryMaximumSize = '1g'
    }
    // 54.10. Incremental compilation
    scalaCompileOptions.useAnt = false
}

task xjc {
    // This is needed for Java 8.
    System.setProperty('javax.xml.accessExternalSchema', 'file')
}

task printProps << {
    // Can't have dots or dashes in the property names without ticks.
    println scalaDep
    println scalaVer
    println 'has.dots-dashes'
}
